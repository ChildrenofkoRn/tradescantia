# This is a basic workflow to help you get started with Actions

name: ROR CI rspec

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
#  pull_request:
#    branches: [ main, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  rspec:
    name: Ruby ${{ matrix.ruby }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ruby:
#          - "2.7.2"
          - "3.1"

    runs-on: ubuntu-latest

    env:
      PG_DB: tradescantia_test
      PG_USER: github_actions
      PG_PSWD: postgres
      PG_HOST: localhost
      PG_PORT: "5432"
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      RAILS_ENV: test

    services:

      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{env.PG_DB}}
          POSTGRES_USER: ${{env.PG_USER}}
          POSTGRES_PASSWORD: ${{env.PG_PSWD}}
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - "6379:6379"
        options: >-
          --entrypoint redis-server
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: lts/*

      - name: Install Chrome
        run: |
          wget --no-verbose https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -yqq gdebi-core
          sudo gdebi --non-interactive google-chrome*.deb
          google-chrome --version

      - name: Install Sphinx
        run: sudo apt install -y mysql-client libmysqlclient-dev sphinxsearch

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      # fix: You have already activated X, but your Gemfile requires Y
      - run: gem update --system

      - name: Prepare app
        env:
          DATABASE_URL: postgresql://${{env.PG_USER}}:${{env.PG_PSWD}}@${{env.PG_HOST}}:${{env.PG_PORT}}/${{env.PG_DB}}
          # fix: ERR_OSSL_EVP_UNSUPPORTED
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          cp .github/database.ci.yml config/database.yml
          bundle exec rake db:create db:migrate
          bundle exec rake assets:precompile

      - name: Run tests
        env:
          DATABASE_URL: postgresql://${{env.PG_USER}}:${{env.PG_PSWD}}@${{env.PG_HOST}}:${{env.PG_PORT}}/${{env.PG_DB}}
        run: bundle exec rspec

      - name: Security audit application code
        run: bundle exec brakeman -q -w2 --color
